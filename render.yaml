services:
  - type: web
    name: journal-app
    env: docker
    plan: free
    buildCommand: "./mvnw clean package -DskipTests"
    startCommand: "java -jar target/*.jar"
    healthCheckPath: /journal/actuator/health
    envVars:
      - key: MONGODB_URI
        sync: false
      - key: REDIS-URI
        sync: false
      - key: KAFKA_SERVER
        sync: false
      - key: KAFKA_USERNAME
        sync: false
      - key: KAFKA_PASSWORD
        sync: false
      - key: EMAIL
        sync: false
      - key: PASSWORD
        sync: false
      - key: GOOGLE-ID
        sync: false
      - key: GOOGLE-SECRET
        sync: false
      - key: WEATHER_API_KEY
        sync: false
      - key: SERVER_PORT
        value: 8080
      - key: SPRING_PROFILES_ACTIVE
        value: prod
      # Java specific settings
      - key: JAVA_OPTS
        value: "-XX:MaxRAM=1024m"

    # Autoscaling configuration (optional, remove if not needed)
    autoDeploy: true
    disk:
      name: journal-data
      mountPath: /data
      sizeGB: 1

    # Health check settings
    healthCheckTimeout: 300 # in seconds
    numInstances: 1

# Optional database service if you want to host MongoDB on Render
# Remove if you're using MongoDB Atlas or other external service
#  - type: pserv
#    name: journal-mongodb
#    env: docker
#    plan: free
#    disk:
#      name: data
#      mountPath: /data/db
#      sizeGB: 1
#    envVars:
#      - key: MONGO_INITDB_DATABASE
#        value: journaldb

# Optional Redis service if you want to host Redis on Render
# Remove if you're using Redis Cloud or other external service
#  - type: redis
#    name: journal-redis
#    ipAllowList: [] # only allow internal connections
#    plan: free
